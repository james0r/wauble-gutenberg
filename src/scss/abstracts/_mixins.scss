// -----------------------------------------------------------------------------
// This file contains all application-wide SASS mixins.
// -----------------------------------------------------------------------------

/// Desktop-first Breakpoints
@mixin xs {
  @media (max-width: #{$screen-xs}) {
    @content;
  }
}

@mixin sm {
  @media (max-width: #{$screen-sm}) {
    @content;
  }
}

@mixin md {
  @media (max-width: #{$screen-md}) {
    @content;
  }
}

@mixin lg {
  @media (max-width: #{$screen-lg}) {
    @content;
  }
}

@mixin xl {
  @media (max-width: #{$screen-xl}) {
    @content;
  }
}

@mixin xxl {
  @media (max-width: #{$screen-xxl}) {
    @content;
  }
}

// Mobile-first Breakpoints
@mixin min-xs {
  @media (max-width: #{$screen-xs}) {
    @content;
  }
}

@mixin min-sm {
  @media (max-width: #{$screen-sm}) {
    @content;
  }
}

@mixin min-md {
  @media (max-width: #{$screen-md}) {
    @content;
  }
}

@mixin min-lg {
  @media (max-width: #{$screen-lg}) {
    @content;
  }
}

@mixin min-xl {
  @media (max-width: #{$screen-xl}) {
    @content;
  }
}

@mixin min-xxl {
  @media (max-width: #{$screen-xxl}) {
    @content;
  }
}

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {

    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }

  @else {

    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}